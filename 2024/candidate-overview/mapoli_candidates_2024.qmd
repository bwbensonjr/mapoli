---
title: Massachusetts 2024 Candidates
execute:
  echo: false
format:
  html:
    html-table-processing: none
---

```{r}
#| output: false

library(tidyverse)
library(readxl)
library(glue)
library(gt)

# Leave out registrars and clerks
offices_to_cover <- c(
    "Governor's Council",
    "State Representative",
    "State Senate"
)      

candidates <- read_excel("2024 District and County Candidates 5.28.24.xlsx") %>%
    # Column transformations
    mutate(is_incumbent = (`Incumbent Y/N` == "Y"),
           candidate = str_to_title(`Candidate`),
                      street_address = str_split_i(Address, ", ", 1),
           city_town = str_split_i(Address, ", ", 2),
           display_name = str_glue("{candidate} ({Party}-{city_town})")) %>%
    # Renaming and selection of columns to keep
    select(office = Office,
           district = District,
           district_id = `District ID`,
           candidate,
           display_name,
           is_incumbent,
           party = Party,
           street_address,
           city_town,
           statement = `Statement of Public Office/Political Designation`) %>%
     # Discard data for some offices
     filter(office %in% offices_to_cover)

incumbents <- candidates %>%
    filter(is_incumbent) %>%
    select(office,
           district,
           incumbent=candidate,
           incumbent_display=display_name,
           incumbent_party=party,
           incumbent_city_town=city_town)

# Give the set of candidates for a particular district,
# return a dataframe with a column per party with the
# count of the candidates in that party.
party_counts <- function(candidates) {
    candidates %>%
        group_by(party) %>%
        tally() %>%
        pivot_wider(names_from=party, values_from=n)
}

districts <- candidates %>%
    # Transform into row-per seat
    nest(candidate = c(candidate,
                       display_name,
                       is_incumbent,
                       party,
                       street_address,
                       city_town,
                       statement)) %>%
    # Join to incumbency data
    left_join(incumbents, by=c("office", "district")) %>%
    # District-level data
    mutate(num_candidates = map_int(candidate, nrow),
           is_contested = (num_candidates > 1),
           is_open = is.na(incumbent),
           parties = map(candidate, party_counts)) %>%
    unnest(parties) %>%
    # This only handles D, R, and U for `party`
    replace_na(list(D=0, R=0, U=0)) %>%
    mutate(inc_party_count = case_when(
        incumbent_party == "D" ~ D,
        incumbent_party == "R" ~ R,
        incumbent_party == "U" ~ U,
        TRUE ~ NA_real_))


```

## Primary challenges to incumbents

```{r}
incumbent_primaries <- districts %>%
    filter(inc_party_count > 1)

incumbent_primaries %>%
    select(office, district, incumbent_party, candidate) %>%
    unnest(candidate) %>%
    filter(incumbent_party == party) %>%
    select(office, district, display_name, statement, is_incumbent) %>%
    group_by(office, district) %>%
    arrange(desc(is_incumbent)) %>%
    select(-is_incumbent) %>%
    gt() %>%
    tab_options(column_labels.hidden=TRUE) %>%
    sub_missing(missing_text="") %>%
    cols_align(columns="display_name", align="right") %>%
    opt_row_striping(row_striping=FALSE)
```

## Open Seats

```{r}
open_seats <- districts %>%
    filter(is_open)

open_seats %>%
    select(office, district, candidate) %>%
    unnest(candidate) %>%
    select(office, district, display_name, statement, party) %>%
    group_by(office, district) %>%
    arrange(party) %>%
    select(-party) %>%
    gt() %>%
    tab_options(column_labels.hidden=TRUE) %>%
    sub_missing(missing_text="") %>%
    cols_align(columns="display_name", align="right") %>%
    opt_row_striping(row_striping=FALSE)
```

## Contested

```{r}
contested <- districts %>%
    filter(is_contested,
           inc_party_count == 1)

contested %>%
    select(office, district, candidate) %>%
    unnest(candidate) %>%
    select(office, district, display_name, statement, is_incumbent, party) %>%
    group_by(office, district) %>%
    arrange(desc(is_incumbent), party) %>%
    select(-c(is_incumbent, party)) %>%
    gt() %>%
    tab_options(column_labels.hidden=TRUE) %>%
    sub_missing(missing_text="") %>%
    cols_align(columns="display_name", align="right") %>%
    opt_row_striping(row_striping=FALSE)
```

## Basic Statistics

- Total candidates: `r nrow(candidates)`


